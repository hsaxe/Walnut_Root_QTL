---
title: "Prediction_performance_figures"
author: "Houston Saxe"
format: html
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}
pacman::p_load(data.table,
               dplyr,
               flextable,
               ggplot2,
               ggprism,
               ggtext,
               kableExtra,
               openxlsx,
               sjPlot,
               stringr,
               tidytext,
               tidyr,
               tibble)
```

# Prediction Performance
```{r}
Perf = list()

Perf$perf_01 = read.xlsx('Results/prediction_selection_performances_Jm_Jr_31.01.xlsx',
                    sheet = 1) %>% 
  mutate(`Female Parent` = '31.01') 



Perf$perf_09 = read.xlsx('Results/prediction_performances_Jm_Jr_31.09.xlsx',
                    sheet = 1) %>% 
  mutate(`Female Parent` = '31.09') 
```

```{r}
Perf$both = rbind(Perf$perf_01, Perf$perf_09) %>% 
  mutate(Trait = case_when(Trait == 'CG_Avg' ~ '<i>A. tumefaciens</i>',
                           Trait == 'PHY_Avg' ~ '<i>Phytophthora</i> spp.',
                           Trait == 'RLN_2Y' ~ 'Two-year <i>P. vulnus</i>',
                           Trait == 'RLN_3Y' ~ 'Three-year <i>P. vulnus</i>',
                           Trait == 'Height_2Y' ~ 'Two-year Tree Height',
                           Trait == 'Height_3Y' ~ 'Three-year Tree Height',
                           T ~ ''),
         `Method + Female Parent` = paste0(Method, ' ', `Female Parent`),
         `Trait + Method + Female Parent` = paste0(Trait, ' ', Method, ' ', `Female Parent`)
         )
  

Perf$Stars = Perf$both %>% 
  group_by(Trait,
           Method,
           `Female Parent`,
           `Method + Female Parent`) %>%
  summarise(`Avg. p-value` = mean(`P.value`),
            Cor = mean(Cor) %>% 
              format(., digits = 3) %>% 
              as.numeric(.)) %>% 
  ungroup() %>% 
  mutate(Stars = case_when(data.table::between(`Avg. p-value`, 0.01, 0.05) ~ '*',
                           data.table::between(`Avg. p-value`, 0.001, 0.01) ~ '**',
                           `Avg. p-value` < 0.001 ~ '***',
                           T ~ ''))

Perf$Stars2 = Perf$Stars %>% 
  mutate(Cor = paste0(Cor, ' ', Stars)) %>% 
  select(Trait,
         Method,
         `Female Parent`,
         Cor) %>% 
  pivot_wider(names_from = Trait,
              values_from = Cor)

Perf$Summary = Perf$both %>% 
  group_by(Trait,
           Method,
           `Female Parent`) %>%
  summarise(`Avg. p-value` = mean(`P.value`),
            Cor = mean(Cor)) %>% 
  pivot_wider(names_from = Trait,
              values_from = c(Cor, `Avg. p-value`),
              names_sep = ' ')
  

```
## Table
```{r}
Perf$table = kable(Perf$Stars2, 
      format = 'html',
      align = 'l',
      escape = F,
      digits = 3
      ) %>% 
  # column_spec(1:length(colnames(Summary)), width = "1000em") %>% 
  kable_styling(bootstrap_options = c("striped",
                                      "hover",
                                      "condensed",
                                      "responsive"),
                full_width = T,
                font_size = 11) %>%
  row_spec(0, bold = TRUE, italic = F) 


Perf$table 

save_kable(Perf$table, 'Results/Performance_table.html')

# Convert the HTML file to an image
webshot2::webshot(url = "Results/Performance_table.html", 
        file = "Results/Performance_table.png",
        zoom = 2,
        cliprect = c(0, 5, 975, 125))
```




```{r}
Perf$lm = lm(Cor ~ Method+`Female Parent`, data = Perf$both)

summary(Perf$lm)
```


## Plot
```{r, fig.width=16, fig.height=7}
Perf$p = ggplot(Perf$both, aes(Method, Cor, 
                     fill = Method
                     ))+
  geom_boxplot(color = 'black')+
  theme_prism()+
  scale_fill_viridis_d()+
  geom_text(data = Perf$Stars, aes(Method, Cor, label = Stars),
            vjust = -2.2,
            size = 7,
            fontface = 'bold')+
  ylim(c(0,1.05))+
  # geom_hline(yintercept = 1,
  #            linetype = 'dashed')+
  scale_x_reordered()+
  theme(
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.ticks.x = element_blank(),
    strip.text = element_markdown(face = "bold"),
    strip.text.y = element_text(angle = 0),
    panel.background = element_rect(color = NA, fill = "#F0F0F0"))+
  # facet_wrap(~Trait,
  #            ncol = 6,
  #            scales = 'free_x')
facet_grid(`Female Parent`~Trait,
             # nrow = 6,
             axes = 'all',
             scales = 'free_y')

Perf$p

sjPlot::save_plot(filename = 'Results/Performance_boxplots.png',
                  fig = Perf$p,
                  width = 40,
                  height = 18)
```


```{r}
Perf$method_FP = Perf$both %>% 
  select(Trait,
         Cor,
         `Method + Female Parent`,
         # ID
         ) %>% 
  pivot_wider(id_cols = everything(),
              names_from = `Method + Female Parent`,
              values_from = Cor)
```

```{r}
Perf$Traits = pairwise.t.test(Perf$both$Cor, Perf$both$`Trait + Method + Female Parent`,
                         p.adjust.method = 'BH')$p.value %>% 
  as.table() %>% 
  as.data.frame()

Perf$Significant = Perf$Traits %>% 
  filter(Freq <= 0.05)

Perf$Insignificant = Perf$Traits %>% 
  filter(Freq > 0.05)
```


# Selection Performance
```{r}
Selection = list()

Selection$Selection_01 = read.xlsx('Results/prediction_selection_performances_Jm_Jr_31.01.xlsx',
                    sheet = 2) %>% 
  mutate(`Female Parent` = '31.01') 



Selection$Selection_09 = read.xlsx('Results/prediction_selection_performances_Jm_Jr_31.09.xlsx',
                    sheet = 2) %>% 
  mutate(`Female Parent` = '31.09') 
```

# Data
```{r}
Selection$both = rbind(Selection$Selection_01, Selection$Selection_09) %>%
  mutate(Trait = case_when(Trait == 'CG_Avg' ~ '<i>A. tumefaciens</i>',
                           Trait == 'PHY_Avg' ~ '<i>Phytophthora</i> spp.',
                           Trait == 'RLN_2Y' ~ 'Two-year <i>P. vulnus</i>',
                           Trait == 'RLN_3Y' ~ 'Three-year <i>P. vulnus</i>',
                           Trait == 'Height_2Y' ~ 'Two-year Tree Height',
                           Trait == 'Height_3Y' ~ 'Three-year Tree Height',
                           T ~ ''),
         Estimate = format(Estimate, digits = 3) %>% 
           as.numeric(.),
         `Method + Female Parent` = paste0(Method, ' ', `Female Parent`),
         `Trait + Method + Female Parent` = paste0(Trait, ' ', Method, ' ', `Female Parent`),
         Stat = ifelse(Stat == 'Mean of x', 'Selection', 'No Selection'),
         Stat_Numeric = ifelse(Stat == 'Selection', 0, 1)
         ) %>% 
  group_by(Stat,
           Trait,
           Method,
           `Female Parent`,
           `Method + Female Parent`) %>%
  mutate(`Avg. Estimate` = mean(Estimate) %>% 
           format(., digits = 3) %>% 
           as.numeric(.)) %>% 
  ungroup()
  

Selection$Stars = Selection$both %>% 
  summarise(`Avg. p-value` = mean(`P.value`),
            .by = c(Stat,
                    Stat_Numeric,
                    `Avg. Estimate`,
                    Trait,
                    Method,
                    `Female Parent`,
                    `Method + Female Parent`)) %>% 
  mutate(Stars = case_when(data.table::between(`Avg. p-value`, 0.05, 0.1) ~ '.',
                           data.table::between(`Avg. p-value`, 0.01, 0.05) ~ '*',
                           data.table::between(`Avg. p-value`, 0.001, 0.01) ~ '**',
                           `Avg. p-value` < 0.001 ~ '***',
                           T ~ '')) %>% 
  group_by(Trait,
           Method,
           `Female Parent`) %>% 
  mutate(Mean_Avg_Estimate = mean(`Avg. Estimate`)) %>% 
  ungroup()

Selection$Stars2 = Selection$Stars %>% 
  mutate(`Avg. Estimate` = paste0(`Avg. Estimate`, ' ', Stars)) %>% 
  select(Stat,
         Trait,
         Method,
         `Female Parent`,
         `Avg. Estimate`) %>% 
  pivot_wider(names_from = Trait,
              values_from = `Avg. Estimate`) %>% 
  arrange(Method)

Selection$Summary = Selection$both %>% 
  group_by(Stat,
           Trait,
           Method,
           `Female Parent`) %>%
  summarise(`Avg. p-value` = mean(`P.value`),
            `Avg. Estimate` = mean(Estimate)) %>% 
  pivot_wider(names_from = Trait,
              values_from = c(`Avg. Estimate`, `Avg. p-value`),
              names_sep = ' ') %>% 
  arrange(Method)
  

```

## p-value distribution
```{r, fig.height=8}
ggplot(Selection$both, aes(Trait, log2(P.value)*-1))+
  geom_boxplot()+
  geom_hline(yintercept = log2(0.05)*-1,
             linetype = 'dashed',
             color = 'red')+
  theme_prism()+
  theme(axis.text.x = element_markdown(angle = 90))+
  facet_wrap(`Female Parent`~Method)
```


## Table
```{r}
Selection$table = kable(Selection$Stars2, 
      format = 'html',
      align = 'l',
      escape = F,
      digits = 3
      ) %>% 
  # column_spec(1:length(colnames(Summary)), width = "1000em") %>% 
  kable_styling(bootstrap_options = c("striped",
                                      "hover",
                                      "condensed",
                                      "responsive"),
                full_width = T,
                font_size = 11) %>%
  row_spec(0, bold = TRUE, italic = F) 


Selection$table 

save_kable(Selection$table, 'Results/Prediction_table.html')

# Convert the HTML file to an image
webshot2::webshot(url = "Results/Prediction_table.html", 
        file = "Results/Prediction_table.png",
        zoom = 2,
        cliprect = c(0, 5, 990, 240))
```




```{r}
Selection$lm_dat = Selection$both %>% 
  summarise(estimate_effect = diff(Estimate),
            .by = c(Replicate,
                    Trait,
                    Method,
                    `Female Parent`)) %>% 
  mutate(Scaled_effect = scale(estimate_effect),
         .by = Trait)

Selection$lm = lm(Scaled_effect ~ Method + `Female Parent` + Trait, data = Selection$lm_dat)

summary(Selection$lm)
```

```{r}
ggplot(Selection$lm_dat, aes(`Female Parent`, Scaled_effect))+
  geom_boxplot()+
  theme_prism()+
  facet_wrap(~Trait)
```



## Plot
```{r, fig.width=14, fig.height=10}
Selection$p = ggplot(Selection$both, aes(Stat_Numeric, `Estimate`, 
                     fill = Stat))+
  geom_boxplot(color = 'black')+
  theme_prism()+
  scale_fill_viridis_d()+
  geom_text(data = Selection$Stars, aes(mean(Stat_Numeric), Mean_Avg_Estimate, label = Stars),
            inherit.aes = F,
            size = 7,
            fontface = 'bold')+
  scale_x_reordered()+
  theme(axis.title.x = element_blank(),
    strip.text = element_markdown(face = 'bold'),
    strip.text.y = element_text(angle = 0),
    panel.background = element_rect(color = NA, fill = "#F0F0F0"))+
  facet_grid(Trait~Method+`Female Parent`,
             # nrow = 6,
             axes = 'all',
             scales = 'free_y')

Selection$p

sjPlot::save_plot(filename = 'Results/Selection_boxplots.png',
                  fig = Selection$p,
                  width = 35,
                  height = 25)
```



# 31.01 General statistics tables
```{r}
Stats_Tables_31.01 = list()

Stats_Tables_31.01$GST = read.csv('Results/Gen_Stats_Table_JmJr_31.01.csv',
                            check.names = F)
```



```{r}
Stats_Tables_31.01$GST1 = Stats_Tables_31.01$GST %>% 
  mutate(Trait = case_when(Trait == 'CG_Avg' ~ '<i>A. tumefaciens</i>',
                           Trait == 'PHY_Avg' ~ '<i>Phytophthora</i> spp.',
                           Trait == 'RLN_2Y' ~ 'Two-year <i>P. vulnus</i>',
                           Trait == 'RLN_3Y' ~ 'Three-year <i>P. vulnus</i>',
                           Trait == 'Height_2Y' ~ 'Two-year Tree Height',
                           Trait == 'Height_3Y' ~ 'Three-year Tree Height',
                           T ~ '')) %>% 
  rename_with(~ gsub('Distance', 'Length', .x))
```

## Gen stats table kable
```{r}
Stats_Tables_31.01$GSTkable = kable(Stats_Tables_31.01$GST1, 
      format = 'html',
      align = 'l',
      escape = F,
      digits = 3
      ) %>% 
  # column_spec(1:length(colnames(Summary)), width = "1000em") %>% 
  kable_styling(bootstrap_options = c("striped",
                                      "hover",
                                      "condensed",
                                      "responsive"),
                full_width = T,
                font_size = 11) %>%
  row_spec(0, bold = TRUE, italic = F) 


Stats_Tables_31.01$GSTkable

save_kable(Stats_Tables_31.01$GSTkable, 'Results/Gen_Stats_table_JmJr_31.01.html')

# Convert the HTML file to an image
webshot2::webshot(url = "Results/Gen_Stats_table_JmJr_31.01.html", 
        file = "Results/Gen_Stats_table_JmJr_31.01.png",
        zoom = 2,
        cliprect = c(0, 5, 830, 260))

```

# Top statistics tables
```{r}

Stats_Tables_31.01$TST = read.csv('Results/Top_Stats_Table_JmJr_31.01.csv',
                            check.names = F)
```



```{r}
Stats_Tables_31.01$TST1 = Stats_Tables_31.01$TST %>% 
  mutate(Trait = case_when(Trait == 'CG_Avg' ~ '<i>A. tumefaciens</i>',
                           Trait == 'PHY_Avg' ~ '<i>Phytophthora</i> spp.',
                           Trait == 'RLN_2Y' ~ 'Two-year <i>P. vulnus</i>',
                           Trait == 'RLN_3Y' ~ 'Three-year <i>P. vulnus</i>',
                           Trait == 'Height_2Y' ~ 'Two-year Tree Height',
                           Trait == 'Height_3Y' ~ 'Three-year Tree Height',
                           T ~ ''),
         Marker = gsub('^X', '', Marker)) %>% 
  rename_with(~ gsub('chr', 'Chromosome', .x) %>% 
                gsub('lod', 'LOD', .) %>% 
                gsub('adj.r.squared', 'Percent Variance Explained', .))
```

## Gen stats table kable
```{r}
Stats_Tables_31.01$TSTkable = kable(Stats_Tables_31.01$TST1, 
      format = 'html',
      align = 'l',
      escape = F,
      digits = 3
      ) %>% 
  # column_spec(1:length(colnames(Summary)), width = "1000em") %>% 
  kable_styling(bootstrap_options = c("striped",
                                      "hover",
                                      "condensed",
                                      "responsive"),
                full_width = T,
                font_size = 11) %>%
  row_spec(0, bold = TRUE, italic = F) 


Stats_Tables_31.01$TSTkable

save_kable(Stats_Tables_31.01$TSTkable, 'Results/Top_Stats_table_JmJr_31.01.html')

# Convert the HTML file to an image
webshot2::webshot(url = "Results/Top_Stats_table_JmJr_31.01.html", 
        file = "Results/Top_Stats_table_JmJr_31.01.png",
        zoom = 2,
        cliprect = c(0, 5, 890, 290))

```


# 31.09 General statistics tables
```{r}
Stats_Tables_31.09 = list()

Stats_Tables_31.09$GST = read.csv('Results/Gen_Stats_Table_JmJr_31.09.csv',
                            check.names = F)
```



```{r}
Stats_Tables_31.09$GST1 = Stats_Tables_31.09$GST %>% 
  mutate(Trait = case_when(Trait == 'CG_Avg' ~ '<i>A. tumefaciens</i>',
                           Trait == 'PHY_Avg' ~ '<i>Phytophthora</i> spp.',
                           Trait == 'RLN_2Y' ~ 'Two-year <i>P. vulnus</i>',
                           Trait == 'RLN_3Y' ~ 'Three-year <i>P. vulnus</i>',
                           Trait == 'Height_2Y' ~ 'Two-year Tree Height',
                           Trait == 'Height_3Y' ~ 'Three-year Tree Height',
                           T ~ ''),
         Distance = ifelse(is.na(Distance), 0, Distance)) %>% 
  rename_with(~ gsub('Distance', 'Length', .x))
```

## Gen stats table kable
```{r}
Stats_Tables_31.09$GSTkable = kable(Stats_Tables_31.09$GST1, 
      format = 'html',
      align = 'l',
      escape = F,
      digits = 3
      ) %>% 
  # column_spec(1:length(colnames(Summary)), width = "1000em") %>% 
  kable_styling(bootstrap_options = c("striped",
                                      "hover",
                                      "condensed",
                                      "responsive"),
                full_width = T,
                font_size = 11) %>%
  row_spec(0, bold = TRUE, italic = F) 


Stats_Tables_31.09$GSTkable

save_kable(Stats_Tables_31.09$GSTkable, 'Results/Gen_Stats_table_JmJr_31.09.html')

# Convert the HTML file to an image
webshot2::webshot(url = "Results/Gen_Stats_table_JmJr_31.09.html", 
        file = "Results/Gen_Stats_table_JmJr_31.09.png",
        zoom = 2,
        cliprect = c(0, 5, 830, 260))

```

# Top statistics tables
```{r}

Stats_Tables_31.09$TST = read.csv('Results/Top_Stats_Table_JmJr_31.09.csv',
                            check.names = F)
```



```{r}
Stats_Tables_31.09$TST1 = Stats_Tables_31.09$TST %>% 
  mutate(Trait = case_when(Trait == 'CG_Avg' ~ '<i>A. tumefaciens</i>',
                           Trait == 'PHY_Avg' ~ '<i>Phytophthora</i> spp.',
                           Trait == 'RLN_2Y' ~ 'Two-year <i>P. vulnus</i>',
                           Trait == 'RLN_3Y' ~ 'Three-year <i>P. vulnus</i>',
                           Trait == 'Height_2Y' ~ 'Two-year Tree Height',
                           Trait == 'Height_3Y' ~ 'Three-year Tree Height',
                           T ~ ''),
         Marker = gsub('^X', '', Marker)) %>% 
  rename_with(~ gsub('chr', 'Chromosome', .x) %>% 
                gsub('lod', 'LOD', .) %>% 
                gsub('adj.r.squared', 'Percent Variance Explained', .))
```

## Gen stats table kable
```{r}
Stats_Tables_31.09$TSTkable = kable(Stats_Tables_31.09$TST1, 
      format = 'html',
      align = 'l',
      escape = F,
      digits = 3
      ) %>% 
  # column_spec(1:length(colnames(Summary)), width = "1000em") %>% 
  kable_styling(bootstrap_options = c("striped",
                                      "hover",
                                      "condensed",
                                      "responsive"),
                full_width = T,
                font_size = 11) %>%
  row_spec(0, bold = TRUE, italic = F) 


Stats_Tables_31.09$TSTkable

save_kable(Stats_Tables_31.09$TSTkable, 'Results/Top_Stats_table_JmJr_31.09.html')

# Convert the HTML file to an image
webshot2::webshot(url = "Results/Top_Stats_table_JmJr_31.09.html", 
        file = "Results/Top_Stats_table_JmJr_31.09.png",
        zoom = 2,
        cliprect = c(0, 5, 890, 260))

```

